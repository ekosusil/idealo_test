Solution for the challange

progress log as 11 March 2018
Day 1:
1. Creating the project using activator and setting up the sbt
2. Implementation of model and DAO. so far 3 entities identified and 4 DAOs are created
3. Implementation of service layer for both services needed; booking and commit. tested using scala worksheet.
4. adding mock data.
5. Implementation of the "booking" service for specifying the booking id, the booking id is hard coded for now.


Day 2:
1. remove the hard code on booking service, set the booking id as path parameter
2. implementation of the "commit" service by POST http method.
3. Implementation of an entity that represents a generic response, containing the status of the request (OK, KO), the data,
  or error messages if any.
4. Refactor of the services to provide response using the generic response.

Day 3:
1. Unit test are written based on specification agreed, bugs are found and fixed on service layer.
2. Add business logic to refuse the seat when booking is full
3. change implementation of data storage to map, to enable update.
4. Create another entity represent tripid, trip timestamp, noOf seat and deduct each seat, and update the no of seat available once booking executed.
5. Put the noOfSeat on booking entity and refactor booking service commit booking.


Day 4:
1. Tried some dependency injection framework, does not make sense to take spring to this project, so use implicit class parameter as a workaround 
	dependency injection
2. write documentation


